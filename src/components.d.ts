/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Task } from "./models/task";
export namespace Components {
    interface AddTask {
    }
    interface CustomBtn {
        "btnType": 'add' | 'delete';
        "disabled": boolean;
        "name": string;
    }
    interface TaskManager {
    }
    interface TaskRow {
        "task": Task;
        "taskIndex": number;
    }
}
export interface AddTaskCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAddTaskElement;
}
export interface TaskRowCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTaskRowElement;
}
declare global {
    interface HTMLAddTaskElement extends Components.AddTask, HTMLStencilElement {
    }
    var HTMLAddTaskElement: {
        prototype: HTMLAddTaskElement;
        new (): HTMLAddTaskElement;
    };
    interface HTMLCustomBtnElement extends Components.CustomBtn, HTMLStencilElement {
    }
    var HTMLCustomBtnElement: {
        prototype: HTMLCustomBtnElement;
        new (): HTMLCustomBtnElement;
    };
    interface HTMLTaskManagerElement extends Components.TaskManager, HTMLStencilElement {
    }
    var HTMLTaskManagerElement: {
        prototype: HTMLTaskManagerElement;
        new (): HTMLTaskManagerElement;
    };
    interface HTMLTaskRowElement extends Components.TaskRow, HTMLStencilElement {
    }
    var HTMLTaskRowElement: {
        prototype: HTMLTaskRowElement;
        new (): HTMLTaskRowElement;
    };
    interface HTMLElementTagNameMap {
        "add-task": HTMLAddTaskElement;
        "custom-btn": HTMLCustomBtnElement;
        "task-manager": HTMLTaskManagerElement;
        "task-row": HTMLTaskRowElement;
    }
}
declare namespace LocalJSX {
    interface AddTask {
        "onAddTaskEventEmitter"?: (event: AddTaskCustomEvent<Task>) => void;
    }
    interface CustomBtn {
        "btnType"?: 'add' | 'delete';
        "disabled"?: boolean;
        "name"?: string;
    }
    interface TaskManager {
    }
    interface TaskRow {
        "onOnDeleteEventEmitter"?: (event: TaskRowCustomEvent<number>) => void;
        "task"?: Task;
        "taskIndex"?: number;
    }
    interface IntrinsicElements {
        "add-task": AddTask;
        "custom-btn": CustomBtn;
        "task-manager": TaskManager;
        "task-row": TaskRow;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-task": LocalJSX.AddTask & JSXBase.HTMLAttributes<HTMLAddTaskElement>;
            "custom-btn": LocalJSX.CustomBtn & JSXBase.HTMLAttributes<HTMLCustomBtnElement>;
            "task-manager": LocalJSX.TaskManager & JSXBase.HTMLAttributes<HTMLTaskManagerElement>;
            "task-row": LocalJSX.TaskRow & JSXBase.HTMLAttributes<HTMLTaskRowElement>;
        }
    }
}
